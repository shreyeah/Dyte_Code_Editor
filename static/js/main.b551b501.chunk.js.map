{"version":3,"sources":["hooks/useLocalStorage.tsx","Editor.tsx","components/AppMenuItemComponent.tsx","components/AppMenuItem.tsx","components/AppMenu.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useLocalStorage","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","value","setValue","useEffect","setItem","stringify","Editor","props","language","displayName","onChange","open","darkTheme","setTheme","handleChange","editor","data","className","type","onClick","prevMode","aria-hidden","onBeforeChange","options","lineWrapping","lint","mode","theme","lineNumbers","AppMenuItemComponent","link","children","ListItem","button","component","forwardRef","ref","exact","innerRef","to","useStyles","PropTypes","string","isRequired","elementType","array","makeStyles","createStyles","menuItem","width","background","color","menuItemIcon","AppMenuItem","name","Icon","items","classes","isExpandable","length","React","setOpen","MenuItemRoot","ListItemText","primary","MenuItemChildren","Collapse","in","timeout","unmountOnExit","Divider","List","disablePadding","map","item","index","appMenuItems","appMenu","navList","AppMenu","root","display","drawerPaper","position","whiteSpace","paddingTop","spacing","paddingBottom","alignContent","content","left","flexGrow","overflow","container","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","setTimeout","clearTimeout","AppBar","Toolbar","Typography","variant","clsx","Drawer","paper","Container","maxWidth","path","title","sandbox","frameBorder","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAIe,SAASA,EAAgBC,EAAKC,GAC3C,IAAMC,EAHO,iBAGgBF,EAE3B,EAA0BG,oBAAS,WACnC,IAAMC,EAAYC,aAAaC,QAAQJ,GACvC,OAAiB,MAAbE,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBH,EACFA,IAEAA,KAPT,mBAAOQ,EAAP,KAAcC,EAAd,KAcA,OAJAC,qBAAU,WACRN,aAAaO,QAAQV,EAAaK,KAAKM,UAAUJ,MAChD,CAACP,EAAaO,IAEV,CAACA,EAAOC,G,8CCmDJI,MA5Df,SAAgBC,GAEd,IACEC,EAIED,EAJFC,SACAC,EAGEF,EAHFE,YACAR,EAEEM,EAFFN,MACAS,EACEH,EADFG,SAGJ,EAAwBf,oBAAS,GAAjC,mBAAOgB,EAAP,KACA,GADA,KAC8BpB,EAAgB,SAAQ,IAAtD,mBAAOqB,EAAP,KAAkBC,EAAlB,KAEA,SAASC,EAAaC,EAAOC,EAAMf,GACjCS,EAAST,GAGT,OACA,yBAAKgB,UAAWL,EAAY,YAAc,cAExC,yBAAKK,UAAS,2BAAsBN,EAAO,GAAK,cAC9C,yBAAKM,UAAU,gBACdR,EAED,4BACIS,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAMN,GAAS,SAAAO,GAAQ,OAAKA,OAEtC,0BAAMH,UAAU,2BACrB,0BAAMA,UAAU,kBAAkBI,cAAY,SAClC,kBAAC,IAAD,QAKR,4BACEH,KAAK,SACLD,UAAU,sBACVE,QAAS,kBAAML,EAAa,EAAG,EAAG,MAEnC,kBAAC,IAAD,QAGH,kBAAC,aAAD,CACAQ,eAAgBR,EAChBb,MAAOA,EACPgB,UAAU,sBACVM,QAAS,CACPC,cAAa,EACbC,MAAK,EACLC,KAAKlB,EACLmB,MAAM,WACNC,aAAY,Q,iJC1BLC,EA5BmD,SAAAtB,GAChE,IAAQU,EAAuCV,EAAvCU,UAAWE,EAA4BZ,EAA5BY,QAASW,EAAmBvB,EAAnBuB,KAAMC,EAAaxB,EAAbwB,SAGlC,OAAKD,GAAwB,kBAATA,EAalB,kBAACE,EAAA,EAAD,CACEC,QAAM,EAENhB,UAAWA,EACXc,SAAUA,EACVG,UAAWC,sBAAW,SAAC5B,EAAqB6B,GAAtB,OAAmC,kBAAC,IAAD,eAASC,OAAK,GAAK9B,EAAnB,CAA0B+B,SAAUF,QAC7FG,GAAIT,IAjBJ,kBAACE,EAAA,EAAD,CACEC,QAAM,EACNhB,UAAWA,EACXc,SAAUA,EACVZ,QAASA,KCyDXqB,GA1DEC,IAAUC,OAAOC,WACjBF,IAAUC,OACVD,IAAUG,YACTH,IAAUI,MAuDDC,aAAW,SAAAnB,GAAK,OAChCoB,YAAa,CACXC,SAAU,CACRC,MAAM,QACN,WAAY,CACVC,WAAY,sBACZ,0BAA2B,CACzBC,MAAO,UAIbC,aAAc,CACZD,MAAO,iBAKEE,EA3DiC,SAA1CA,EAA0C9C,GAC9C,IAAQ+C,EAAiC/C,EAAjC+C,KAAMxB,EAA2BvB,EAA3BuB,KAAd,GAAyCvB,EAArBgD,KAAqBhD,EAAfiD,cAA1B,MAAkC,GAAlC,EACMC,EAAUjB,IACVkB,EAAeF,GAASA,EAAMG,OAAS,EAC7C,EAAwBC,IAAMjE,UAAS,GAAvC,mBAAOgB,EAAP,KAAakD,EAAb,KAMA,IAAMC,EACJ,kBAAC,EAAD,CAAsB7C,UAAWwC,EAAQT,SAAUlB,KAAMA,EAAMX,QALjE,WACE0C,GAASlD,KAWP,kBAACoD,EAAA,EAAD,CAAcC,QAASV,KAKrBW,EAAmBP,EACvB,kBAACQ,EAAA,EAAD,CAAUC,GAAIxD,EAAMyD,QAAQ,OAAOC,eAAa,GAC9C,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAMrC,UAAU,MAAMsC,gBAAc,GACjChB,EAAMiB,KAAI,SAACC,EAAMC,GAAP,OACT,kBAACtB,EAAD,iBAAiBqB,EAAjB,CAAuBlF,IAAKmF,UAIhC,KAEJ,OACE,oCACGb,EACAG,ICjEDW,EAAe,CACnB,CACEtB,KAAM,cACNxB,KAAM,KAER,CACEwB,KAAM,aACNxB,KAAM,QAER,CACEwB,KAAM,oBACNxB,KAAM,gBAoBJU,EAAYM,aAAW,SAAAnB,GAAK,OAChCoB,YAAa,CACX8B,QAAS,CACP5B,MAAO,QAET6B,QAAS,CACP7B,MARc,IAUhBD,SAAU,CACRC,MAXc,IAahBG,aAAc,CACZD,MAAO,gBAKE4B,EAhCW,WACxB,IAAMtB,EAAUjB,IAEhB,OACE,kBAAC+B,EAAA,EAAD,CAAMrC,UAAU,MAAMjB,UAAWwC,EAAQoB,QAASL,gBAAc,GAE7DI,EAAaH,KAAI,SAACC,EAAMC,GAAP,OAChB,kBAAC,EAAD,iBAAiBD,EAAjB,CAAuBlF,IAAKmF,UCqF9BnC,EAAYM,aAAW,SAAAnB,GAAK,MAAK,CACrCqD,KAAM,CACJC,QAAS,QAEXC,YAAa,CACXC,SAAU,WACVC,WAAY,SACZnC,MATgB,IAUhBoC,WAAY1D,EAAM2D,QAAQ,GAC1BC,cAAe5D,EAAM2D,QAAQ,GAC7BpC,WAAY,UACZC,MAAO,OACPqC,aAAa,QAGfC,QAAS,CACPC,KAAK,OAELC,SAAU,EACVC,SAAU,QAEZC,UAAW,CACTR,WAAY1D,EAAM2D,QAAQ,GAC1BC,cAAe5D,EAAM2D,QAAQ,QAKlBQ,EA7HO,WACpB,IAAMrC,EAAUjB,IAChB,EAAuBjD,EAAgB,OAAO,IAA9C,mBAAOwG,EAAP,KAAYC,EAAZ,KACA,EAAqBzG,EAAgB,MAAM,IAA3C,mBAAO0G,EAAP,KAAWC,EAAX,KACA,EAAmB3G,EAAgB,KAAK,IAAxC,mBAAO4G,EAAP,KAAUC,EAAV,KACA,EAA4BzG,mBAAS,IAArC,mBAAO0G,EAAP,KAAeC,EAAf,KAoBA,OAfFnG,qBAAU,WACR,IAAMiE,EAAUmC,YAAW,WACzBD,EAAU,uBAAD,OAEHP,EAFG,6BAGFE,EAHE,+BAIDE,EAJC,2BAOR,KAEH,OAAO,kBAAMK,aAAapC,MACzB,CAAC2B,EAAME,EAAKE,IAIX,kBAAC,IAAD,KACA,kBAACM,EAAA,EAAD,CAAQtB,SAAS,SAAShC,MAAM,WAC5B,kBAACuD,EAAA,EAAD,KAIE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,sBAKN,yBAAK3F,UAAW4F,YAAK,MAAOpD,EAAQuB,OAClC,kBAAC8B,EAAA,EAAD,CACEF,QAAQ,YACRnD,QAAS,CACPsD,MAAOtD,EAAQyB,cAGjB,kBAAC,EAAD,OAEF,0BAAMjE,UAAWwC,EAAQgC,SACvB,kBAACuB,EAAA,EAAD,CAAWC,SAAS,KAAKhG,UAAWwC,EAAQoC,WAa/C,yBAAK5E,UAAU,QAEf,kBAAC,IAAD,KACS,kBAAC,IAAD,CAAOiG,KAAK,IAAI7E,OAAK,GACrB,kBAAC,EAAD,CAAQ7B,SAAS,MAAMC,YAAY,OAChDR,MAAO8F,EACPrF,SAAUsF,KAEG,kBAAC,IAAD,CAAOkB,KAAK,QAAQ,kBAAC,EAAD,CAAQ1G,SAAS,MAAMC,YAAY,MAC/DR,MAAOgG,EACPvF,SAAUwF,KACF,kBAAC,IAAD,CAAOgB,KAAK,eACZ,kBAAC,EAAD,CAAQ1G,SAAS,aAAaC,YAAY,KAClDR,MAAOkG,EACPzF,SAAU0F,MAGX,4BACAC,OAAQA,EACRc,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZpE,MAAM,OACNqE,OAAO,eCvFGC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b551b501.chunk.js","sourcesContent":["import {useState, useEffect} from 'react';\r\n\r\nconst PREFIX = 'codepen-clone-'\r\n\r\nexport default function useLocalStorage(key, initialValue){\r\n  const prefixedKey = PREFIX + key;\r\n\r\n    const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(prefixedKey)\r\n    if (jsonValue != null) return JSON.parse(jsonValue)\r\n\r\n    if (typeof initialValue === 'function') {\r\n      return initialValue()\r\n    } else {\r\n      return initialValue\r\n    }\r\n  })\r\n    useEffect(() => {\r\n      localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n    }, [prefixedKey, value])\r\n\r\n    return [value, setValue];\r\n}","import React,{useState} from 'react';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/material.css';\r\nimport 'codemirror/mode/xml/xml';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/mode/css/css';\r\nimport useLocalStorage from './hooks/useLocalStorage'\r\nimport {Controlled as ControlledEditor} from 'react-codemirror2';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport RotateLeftIcon from '@material-ui/icons/RotateLeft';\r\n\r\n\r\nfunction Editor(props){\r\n\r\n  const {\r\n    language,\r\n    displayName,\r\n    value,\r\n    onChange\r\n  } = props;\r\n\r\nconst [open, setOpen] = useState(true);\r\nconst [darkTheme, setTheme] = useLocalStorage('theme',true);\r\n\r\nfunction handleChange(editor,data, value){\r\n  onChange(value)\r\n}\r\n\r\n  return(\r\n  <div className={darkTheme ? \"dark-mode\" : \"light-mode\"}>\r\n\r\n    <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n      <div className=\"editor-title\">\r\n      {displayName}\r\n      \r\n      <button\r\n          type=\"button\"\r\n          className=\"expand-collapse-btn\"\r\n          onClick={() => setTheme(prevMode => !prevMode)}\r\n        >\r\n         <span className=\"dark-mode__content-wrap\">\r\n\t\t\t\t<span className=\"dark-mode__icon\" aria-hidden=\"true\" />\r\n                <Brightness4Icon/>\r\n\r\n\t\t\t\t{/* <span className=\"dark-mode__status\">{darkTheme ? \" on\" : \" off\"}</span> */}\r\n\t\t\t</span>\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"expand-collapse-btn\"\r\n          onClick={() => handleChange(\"\",\"\",\"\")}\r\n        >\r\n         <RotateLeftIcon/>\r\n        </button>\r\n      </div>\r\n      <ControlledEditor\r\n      onBeforeChange={handleChange}\r\n      value={value}\r\n      className=\"code-mirror-wrapper\"\r\n      options={{\r\n        lineWrapping:true,\r\n        lint:true,\r\n        mode:language,\r\n        theme:'material',\r\n        lineNumbers:true\r\n      }}\r\n      />\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Editor;","import React, { forwardRef } from 'react'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport { NavLink, NavLinkProps } from 'react-router-dom'\r\n\r\nexport interface AppMenuItemComponentProps {\r\n  className?: string\r\n  link?: string | null // because the InferProps props allows alows null value\r\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\r\n}\r\n\r\nconst AppMenuItemComponent: React.FC<AppMenuItemComponentProps> = props => {\r\n  const { className, onClick, link, children } = props\r\n\r\n  // If link is not set return the orinary ListItem\r\n  if (!link || typeof link !== 'string') {\r\n    return (\r\n      <ListItem\r\n        button\r\n        className={className}\r\n        children={children}\r\n        onClick={onClick}\r\n      />\r\n    )\r\n  }\r\n\r\n  // Return a LitItem with a link component\r\n  return (\r\n    <ListItem\r\n      button\r\n      \r\n      className={className}\r\n      children={children}\r\n      component={forwardRef((props: NavLinkProps, ref: any) => <NavLink exact {...props} innerRef={ref} />)}\r\n      to={link}\r\n    />\r\n  )\r\n}\r\n\r\nexport default AppMenuItemComponent\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\r\n// import { SvgIconProps } from '@material-ui/core/SvgIcon'\r\n\r\nimport List from '@material-ui/core/List'\r\n\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Collapse from '@material-ui/core/Collapse'\r\n\r\nimport IconExpandLess from '@material-ui/icons/ExpandLess'\r\nimport IconExpandMore from '@material-ui/icons/ExpandMore'\r\n\r\nimport AppMenuItemComponent from './AppMenuItemComponent'\r\n\r\n// React runtime PropTypes\r\nexport const AppMenuItemPropTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  link: PropTypes.string,\r\n  Icon: PropTypes.elementType,\r\n  items: PropTypes.array,\r\n}\r\n\r\n// TypeScript compile-time props type, infered from propTypes\r\n// https://dev.to/busypeoples/notes-on-typescript-inferring-react-proptypes-1g88\r\ntype AppMenuItemPropTypes = PropTypes.InferProps<typeof AppMenuItemPropTypes>\r\ntype AppMenuItemPropsWithoutItems = Omit<AppMenuItemPropTypes, 'items'>\r\n\r\n// Improve child items declaration\r\nexport type AppMenuItemProps = AppMenuItemPropsWithoutItems & {\r\n  items?: AppMenuItemProps[]\r\n}\r\n\r\nconst AppMenuItem: React.FC<AppMenuItemProps> = props => {\r\n  const { name, link, Icon, items = [] } = props\r\n  const classes = useStyles()\r\n  const isExpandable = items && items.length > 0\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  function handleClick() {\r\n    setOpen(!open)\r\n  }\r\n\r\n  const MenuItemRoot = (\r\n    <AppMenuItemComponent className={classes.menuItem} link={link} onClick={handleClick}>\r\n      {/* Display an icon if any */}\r\n      {/* {!!Icon && (\r\n        <ListItemIcon className={classes.menuItemIcon}>\r\n          <Icon />\r\n        </ListItemIcon>\r\n      )} */}\r\n      <ListItemText primary={name} />\r\n      {/* Display the expand menu if the item has children */}\r\n    </AppMenuItemComponent>\r\n  )\r\n\r\n  const MenuItemChildren = isExpandable ? (\r\n    <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n      <Divider />\r\n      <List component=\"div\" disablePadding>\r\n        {items.map((item, index) => (\r\n          <AppMenuItem {...item} key={index} />\r\n        ))}\r\n      </List>\r\n    </Collapse>\r\n  ) : null\r\n\r\n  return (\r\n    <>\r\n      {MenuItemRoot}\r\n      {MenuItemChildren}\r\n    </>\r\n  )\r\n}\r\n\r\nconst useStyles = makeStyles(theme =>\r\n  createStyles({\r\n    menuItem: {\r\n      width:'150px',\r\n      '&.active': {\r\n        background: 'rgba(0, 0, 0, 0.08)',\r\n        '& .MuiListItemIcon-root': {\r\n          color: '#fff',\r\n        },\r\n      },\r\n    },\r\n    menuItemIcon: {\r\n      color: '#97c05c',\r\n    },\r\n  }),\r\n)\r\n\r\nexport default AppMenuItem\r\n","import React from 'react'\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles'\r\n\r\nimport List from '@material-ui/core/List'\r\n\r\nimport AppMenuItem from './AppMenuItem'\r\n\r\nconst appMenuItems = [\r\n  {\r\n    name: 'HTML Editor',\r\n    link: '/',\r\n  },\r\n  {\r\n    name: 'CSS Editor',\r\n    link: '/css',\r\n  },\r\n  {\r\n    name: 'JavaScript Editor',\r\n    link: '/javascript',\r\n  },\r\n\r\n]\r\n\r\nconst AppMenu: React.FC = () => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <List component=\"nav\" className={classes.appMenu} disablePadding>\r\n      {/* <AppMenuItem {...appMenuItems[0]} /> */}\r\n      {appMenuItems.map((item, index) => (\r\n        <AppMenuItem {...item} key={index} />\r\n      ))}\r\n    </List>\r\n  )\r\n}\r\n\r\nconst drawerWidth = 90\r\n\r\nconst useStyles = makeStyles(theme =>\r\n  createStyles({\r\n    appMenu: {\r\n      width: '10px',\r\n    },\r\n    navList: {\r\n      width: drawerWidth,\r\n    },\r\n    menuItem: {\r\n      width: drawerWidth,\r\n    },\r\n    menuItemIcon: {\r\n      color: '#97c05c',\r\n    },\r\n  }),\r\n)\r\n\r\nexport default AppMenu\r\n","import React,{useState, useEffect} from 'react';\nimport Editor from './Editor'\nimport clsx from 'clsx'\nimport useLocalStorage from './hooks/useLocalStorage'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Drawer from '@material-ui/core/Drawer'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport { Switch, Route, BrowserRouter } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport AppMenu from './components/AppMenu'\n\n\nconst App: React.FC = () => {\n  const classes = useStyles()\n  const [html,setHtml] = useLocalStorage('html','');\n  const [css,setCss] = useLocalStorage('css','');\n  const [js,setJs] = useLocalStorage('js','');\n  const [srcDoc, setSrcDoc] = useState('');\n\n  \n\n\nuseEffect(() => {\n  const timeout = setTimeout(() => {\n    setSrcDoc(`\n  <html>\n  <body>${html}</body>\n  <style>${css}</style>\n  <script>${js}</script>\n  <html>`\n    );\n  }, 250)\n\n  return () => clearTimeout(timeout)\n}, [html, css, js])\n\n\n  return (\n    <BrowserRouter>\n    <AppBar position=\"static\" color=\"default\">\n        <Toolbar>\n          {/* <IconButton edge=\"start\"  color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton> */}\n          <Typography variant=\"h6\" >\n            Dyte Code Editor\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    <div className={clsx('App', classes.root)}>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <AppMenu/>\n      </Drawer>\n      <main className={classes.content}>\n        <Container maxWidth=\"lg\" className={classes.container}>\n        \n     {/* <div className=\"pane top-pane\">\n      <Editor language=\"xml\" displayName=\"HTML\"\n      value={html} \n      onChange={setHtml} />\n      <Editor language=\"css\" displayName=\"CSS\"\n      value={css} \n      onChange={setCss} />\n      <Editor language=\"javascript\" displayName=\"JS\"\n      value={js} \n      onChange={setJs} />\n     </div> */}\n     <div className=\"pane\">\n     \n     <Switch>\n              <Route path=\"/\" exact >\n              <Editor language=\"xml\" displayName=\"HTML\"\n value={html} \n onChange={setHtml} />\n              </Route>\n              <Route path=\"/css\" ><Editor language=\"css\" displayName=\"CSS\"\n      value={css} \n      onChange={setCss} /></Route>\n              <Route path=\"/javascript\">\n              <Editor language=\"javascript\" displayName=\"JS\"\n      value={js} \n      onChange={setJs} />\n      </Route>\n            </Switch>\n     <iframe \n     srcDoc={srcDoc}\n     title=\"output\"\n     sandbox=\"allow-scripts\"\n     frameBorder=\"5\"\n     width=\"100%\"\n     height=\"100%\"\n     />\n     </div>\n     \n\n        </Container>\n        </main>\n    \n    </div>\n    </BrowserRouter>\n  );\n}\nconst drawerWidth = 180\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n    background: '#535454',\n    color: '#fff',\n    alignContent:'left',\n\n  },\n  content: {\n    left:'20px',\n\n    flexGrow: 1,\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n}))\n\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}